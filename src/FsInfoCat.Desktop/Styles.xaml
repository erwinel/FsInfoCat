<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:royale="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Royale"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ControlTemplate x:Key="DefaultTextBoxBaseTemplate" TargetType="{x:Type TextBoxBase}">
        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DefaultTextBoxBaseStyle" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource DefaultTextBoxBaseTemplate}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Name="DefaultTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxBaseStyle}">
        <Setter Property="Height" Value="{StaticResource DefaultTextBoxHeight}"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="AcceptsTab" Value="False"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}"/>
    <Style x:Key="MultiLineTextBox" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxBaseStyle}">
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="InfoMessageTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource InfoBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="WarningMessageTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource WarningBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ErrorMessageTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="Height" Value="{StaticResource DefaultTextBoxHeight}"/>
    </Style>
    <ControlTemplate x:Key="DefaultButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
        <royale:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" SnapsToDevicePixels="True">
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </royale:ButtonChrome>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="RenderDefaulted" TargetName="Chrome" Value="True"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="RenderPressed" TargetName="Chrome" Value="True"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DefaultButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="3" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource DefaultButtonBaseControlTemplate}"/>
    </Style>
    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonBaseStyle}">
        <Setter Property="Height" Value="{StaticResource DefaultButtonHeight}"/>
        <Setter Property="Width" Value="{StaticResource DefaultButtonWidth}"/>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}"/>
    <Style x:Key="SquareButton" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Width" Value="{StaticResource DefaultButtonHeight}"/>
    </Style>
    <Style x:Key="BrowseButton" TargetType="Button" BasedOn="{StaticResource SquareButton}">
        <Setter Property="Content" Value="â€¦"/>
    </Style>
    <ControlTemplate x:Key="DefaultGridSplitterControlTemplate" TargetType="{x:Type GridSplitter}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
    </ControlTemplate>
    <ControlTemplate x:Key="DefaultGridSplitterPreviewControlTemplate" TargetType="{x:Type Control}">
        <Rectangle Fill="{DynamicResource TranslucentBlack50pctBrush}"/>
    </ControlTemplate>
    <Style x:Key="DefaultGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template" Value="{DynamicResource DefaultGridSplitterPreviewControlTemplate}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource DefaultGridSplitterControlTemplate}"/>
    </Style>
    <Style x:Key="VerticalGridSplitterStyle" TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource DefaultGridSplitterStyle}">
        <Setter Property="Background" Value="{StaticResource VerticalSeparatorBrush}"/>
        <Setter Property="ResizeDirection" Value="Columns"/>
        <Setter Property="Width" Value="{StaticResource NormalSpacing}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="SizeWE"/>
    </Style>
    <Style x:Key="HorizontalGridSplitterStyle" TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource DefaultGridSplitterStyle}">
        <Setter Property="Background" Value="{StaticResource HorizontalSeparatorBrush}"/>
        <Setter Property="ResizeDirection" Value="Rows"/>
        <Setter Property="Height" Value="{StaticResource NormalSpacing}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="SizeNS"/>
    </Style>
    <Style x:Key="DefaultGroupBoxStyle" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style TargetType="GroupBox" BasedOn="{StaticResource DefaultGroupBoxStyle}"/>
</ResourceDictionary>
