<?xml version="1.0" encoding="utf-8"?>
<schema targetNamespace="urn:Erwine:Leonard:T:PsHelpIntermediate.xsd"
    xmlns:int="urn:Erwine:Leonard:T:PsHelpIntermediate.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" attributeFormDefault="unqualified" xml:lang="en">
    <simpleType name="NonEmptyString">
        <restriction base="string">
            <minLength value="1" />
            <pattern value="\s*\S.*"></pattern>
        </restriction>
    </simpleType>
    <simpleType name="NonEmptyNormalizedString">
        <restriction base="normalizedString">
            <minLength value="1" />
        </restriction>
    </simpleType>
    <simpleType name="DottedNameIdentifier">
        <restriction base="int:NonEmptyNormalizedString">
            <pattern value="[A-Za-z\d_]+(\.[A-Za-z\d_]+)*"></pattern>
        </restriction>
    </simpleType>
    <simpleType name="UcFirstIdentifier">
        <restriction base="int:NonEmptyNormalizedString">
            <pattern value="[A-Z][A-Za-z\d_]*(\.[A-Za-z\d_]+)*"></pattern>
        </restriction>
    </simpleType>
    <simpleType name="CommonVerbNames">
        <restriction base="int:UcFirstIdentifier">
            <enumeration value="Add" />
            <enumeration value="Clear" />
            <enumeration value="Close" />
            <enumeration value="Copy" />
            <enumeration value="Enter" />
            <enumeration value="Exit" />
            <enumeration value="Find" />
            <enumeration value="Format" />
            <enumeration value="Get" />
            <enumeration value="Hide" />
            <enumeration value="Join" />
            <enumeration value="Lock" />
            <enumeration value="Move" />
            <enumeration value="New" />
            <enumeration value="Open" />
            <enumeration value="Optimize" />
            <enumeration value="Pop" />
            <enumeration value="Push" />
            <enumeration value="Redo" />
            <enumeration value="Remove" />
            <enumeration value="Rename" />
            <enumeration value="Reset" />
            <enumeration value="Resize" />
            <enumeration value="Search" />
            <enumeration value="Select" />
            <enumeration value="Set" />
            <enumeration value="Show" />
            <enumeration value="Skip" />
            <enumeration value="Split" />
            <enumeration value="Step" />
            <enumeration value="Switch" />
            <enumeration value="Undo" />
            <enumeration value="Unlock" />
            <enumeration value="Watch" />
        </restriction>
    </simpleType>
    <simpleType name="DataVerbNames">
        <restriction base="int:UcFirstIdentifier">
            <enumeration value="Backup" />
            <enumeration value="Checkpoint" />
            <enumeration value="Compare" />
            <enumeration value="Compress" />
            <enumeration value="Convert" />
            <enumeration value="ConvertFrom" />
            <enumeration value="ConvertTo" />
            <enumeration value="Dismount" />
            <enumeration value="Edit" />
            <enumeration value="Expand" />
            <enumeration value="Export" />
            <enumeration value="Group" />
            <enumeration value="Import" />
            <enumeration value="Initialize" />
            <enumeration value="Limit" />
            <enumeration value="Merge" />
            <enumeration value="Mount" />
            <enumeration value="Out" />
            <enumeration value="Publish" />
            <enumeration value="Restore" />
            <enumeration value="Save" />
            <enumeration value="Sync" />
            <enumeration value="Unpublish" />
            <enumeration value="Update" />
        </restriction>
    </simpleType>
    <simpleType name="LifecycleVerbNames">
        <restriction base="int:UcFirstIdentifier">
            <enumeration value="Approve" />
            <enumeration value="Assert" />
            <enumeration value="Complete" />
            <enumeration value="Confirm" />
            <enumeration value="Deny" />
            <enumeration value="Disable" />
            <enumeration value="Enable" />
            <enumeration value="Install" />
            <enumeration value="Invoke" />
            <enumeration value="Register" />
            <enumeration value="Request" />
            <enumeration value="Restart" />
            <enumeration value="Resume" />
            <enumeration value="Start" />
            <enumeration value="Stop" />
            <enumeration value="Submit" />
            <enumeration value="Suspend" />
            <enumeration value="Uninstall" />
            <enumeration value="Unregister" />
            <enumeration value="Wait" />
        </restriction>
    </simpleType>
    <simpleType name="DiagnosticVerbNames">
        <restriction base="int:UcFirstIdentifier">
            <enumeration value="Debug" />
            <enumeration value="Measure" />
            <enumeration value="Ping" />
            <enumeration value="Repair" />
            <enumeration value="Resolve" />
            <enumeration value="Test" />
            <enumeration value="Trace" />
        </restriction>
    </simpleType>
    <simpleType name="CommunicationsVerbNames">
        <restriction base="int:UcFirstIdentifier">
            <enumeration value="Connect" />
            <enumeration value="Disconnect" />
            <enumeration value="Read" />
            <enumeration value="Receive" />
            <enumeration value="Send" />
            <enumeration value="Write" />
        </restriction>
    </simpleType>
    <simpleType name="SecurityVerbNames">
        <restriction base="int:UcFirstIdentifier">
            <enumeration value="Block" />
            <enumeration value="Grant" />
            <enumeration value="Protect" />
            <enumeration value="Revoke" />
            <enumeration value="Unblock" />
            <enumeration value="Unprotect" />
        </restriction>
    </simpleType>
    <simpleType name="OtherVerbNames">
        <restriction base="int:UcFirstIdentifier">
            <enumeration value="Use" />
        </restriction>
    </simpleType>
    <simpleType name="AllVerbNames">
        <union memberTypes="int:CommonVerbNames int:DataVerbNames int:LifecycleVerbNames int:DiagnosticVerbNames int:CommunicationsVerbNames int:SecurityVerbNames int:OtherVerbNames" />
    </simpleType>
    <simpleType name="alertTypesEnumType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(base):/xs:schema/xs:simpleType[@name='alertTypesEnumType']" />
            <documentation>Describes the type of alert.</documentation>
        </annotation>
        <restriction base="string">
            <enumeration value="tip" />
            <enumeration value="note" />
            <enumeration value="caution" />
            <enumeration value="important" />
            <enumeration value="warning" />
            <enumeration value="bestpractice" />
            <enumeration value="other" />
            <enumeration value="security" />
            <enumeration value="performance" />
            <enumeration value="configuration" />
        </restriction>
    </simpleType>
    <simpleType name="devLanguagesType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(base):/xs:schema/xs:simpleType[@name='devLanguagesType']" />
            <documentation>Describes the development language for a specific part of a document.</documentation>
        </annotation>
        <restriction base="token">
            <enumeration value="cpp" />
            <enumeration value="vb" />
            <enumeration value="vbs" />
            <enumeration value="js" />
            <enumeration value="c#" />
            <enumeration value="j#" />
            <enumeration value="jscript#" />
            <enumeration value="cpp#" />
            <enumeration value="vb#" />
            <enumeration value="xml" />
            <enumeration value="html" />
            <enumeration value="other" />
            <enumeration value="other#" />
        </restriction>
    </simpleType>
    <simpleType name="trustedDataType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:simpleType[@name='trustedDataType']" />
        </annotation>
        <restriction base="token">
            <enumeration value="always" />
            <enumeration value="never" />
            <enumeration value="sometimes" />
        </restriction>
    </simpleType>
    <simpleType name="PsErrorCategory">
        <restriction base="token">
            <enumeration value="NotSpecified" />
            <enumeration value="OpenError " />
            <enumeration value="CloseError" />
            <enumeration value="DeviceError" />
            <enumeration value="DeadlockDetected" />
            <enumeration value="InvalidArgument" />
            <enumeration value="InvalidData" />
            <enumeration value="InvalidOperation" />
            <enumeration value="InvalidResult" />
            <enumeration value="InvalidType" />
            <enumeration value="MetadataError" />
            <enumeration value="NotImplemented" />
            <enumeration value="NotInstalled" />
            <enumeration value="ObjectNotFound" />
            <enumeration value="OperationStopped" />
            <enumeration value="OperationTimeout" />
            <enumeration value="SyntaxError" />
            <enumeration value="ParserError" />
            <enumeration value="PermissionDenied" />
            <enumeration value="ResourceBusy" />
            <enumeration value="ResourceExists" />
            <enumeration value="ResourceUnavailable" />
            <enumeration value="ReadError" />
            <enumeration value="WriteError" />
            <enumeration value="FromStdErr" />
            <enumeration value="SecurityError" />
            <enumeration value="ProtocolError" />
            <enumeration value="ConnectionError" />
            <enumeration value="AuthenticationError" />
            <enumeration value="LimitsExceeded" />
            <enumeration value="QuotaExceeded" />
            <enumeration value="NotEnabled" />
        </restriction>
    </simpleType>

    <attributeGroup name="addressAttributeGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(base):/xs:schema/xs:attributeGroup[@name='addressAttributeGroup']" />
        </annotation>
        <attribute name="address" type="ID">
            <annotation>
                <documentation>Describes the attached content with a unique ID/GUID/URI to reference for purposes such as sharing and hyperlinking.</documentation>
            </annotation>
        </attribute>
    </attributeGroup>
    <attributeGroup name="expandCollapseGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:attributeGroup[@name='expandCollapseGroup']" />
        </annotation>
        <attribute name="expandCollapse" use="optional">
            <annotation>
                <documentation>Specifies whether the element should appear in an expanded or collapsed state at display time of the element.</documentation>
            </annotation>
            <simpleType>
                <restriction base="string">
                    <enumeration value="expand" />
                    <enumeration value="collapse" />
                </restriction>
            </simpleType>
        </attribute>
    </attributeGroup>
    <attributeGroup name="userInstructionAttributeGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:attributeGroup[@name='userInstructionAttributeGroup']" />
            <documentation>This type is used for describing user actions.</documentation>
        </annotation>
        <attribute name="instruction">
            <annotation>
                <documentation>Identifies a user action, using either the keyboard or the mouse.</documentation>
            </annotation>
            <simpleType>
                <restriction base="token">
                    <enumeration value="click" />
                    <enumeration value="double-click" />
                    <enumeration value="other" />
                    <enumeration value="press" />
                    <enumeration value="inSequence" />
                    <enumeration value="simultaneously" />
                </restriction>
            </simpleType>
        </attribute>
    </attributeGroup>
    <attributeGroup name="tableEntryAttributeGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:attributeGroup[@name='tableEntryAttributeGroup']" />
            <documentation>This type describes the attributes for table Entry.</documentation>
            <documentation>The attributes used are not from docbook, but are modeled off of XHTML v1.1.</documentation>
        </annotation>
        <attribute name="rowSpan" type="positiveInteger">
            <annotation>
                <documentation>Specifies the number of additional rows that the current entry (cell) should span. Similar in concept to the HTML rowspan attribute. This value should be a positive integer.</documentation>
            </annotation>
        </attribute>
        <attribute name="columnSpan" type="positiveInteger">
            <annotation>
                <documentation>Specifies the number of additional columns that the current entry (cell) should span. Similar in concept to the HTML colspan attribute. This value should be a positive integer.</documentation>
            </annotation>
        </attribute>
    </attributeGroup>

    <group name="inlineCommonGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:group[@name='inlineCommonGroup']" />
            <documentation>This type describes the set of inline elements that are likely to be needed for block elements' content models.</documentation>
        </annotation>
        <choice>
            <element name="acronym" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='acronym']" />
                    <documentation>Identifies an acronym within a body of text.</documentation>
                </annotation>
            </element>
            <element name="abbreviation" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='abbreviation']" />
                    <documentation>Identifies an abbreviation within a body of text.</documentation>
                </annotation>
            </element>
            <element name="quoteInline" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='quoteInline']" />
                    <documentation>Identifies a quotation within a body of text.</documentation>
                </annotation>
            </element>
            <element name="date" type="date">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='date']" />
                    <documentation>Identifies a date within a body of text.</documentation>
                </annotation>
            </element>
            <element name="foreignPhrase" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='foreignPhrase']" />
                    <documentation>Identifies a phrase of a language different than the primary language of a document.</documentation>
                </annotation>
            </element>
            <element name="phrase" type="int:inlineType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='phrase']" />
                    <documentation>Contains a span of text, but does not specify any semantics by itself. Use the phrase element to insert replaceable content into a document when no other element is suitable.</documentation>
                </annotation>
            </element>
            <element name="copyrightInline">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='copyrightInline']" />
                    <documentation>Describes the copyright information for a document.</documentation>
                </annotation>
                <complexType>
                    <sequence>
                        <element name="trademark" type="token">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='trademark']" />
                                <documentation>Describes a corporate trademark.</documentation>
                            </annotation>
                        </element>
                        <element name="year" type="integer" minOccurs="0" maxOccurs="unbounded">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='year']" />
                                <documentation>Specifies the year of a particular copyright.</documentation>
                            </annotation>
                        </element>
                        <element name="holder" type="token" minOccurs="0" maxOccurs="unbounded">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='holder']" />
                                <documentation>Specifies the person or company that holds a particular copyright.</documentation>
                            </annotation>
                        </element>
                    </sequence>
                    <attribute name="class">
                        <annotation>
                            <documentation>Specifies the type of trademark used.</documentation>
                        </annotation>
                        <simpleType>
                            <restriction base="token">
                                <enumeration value="copyright" />
                                <enumeration value="trade" />
                                <enumeration value="registered" />
                                <enumeration value="service" />
                            </restriction>
                        </simpleType>
                    </attribute>
                </complexType>
            </element>
            <element name="corporation" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='corporation']" />
                    <documentation>Identifies the name of a corporation within a body of text.</documentation>
                </annotation>
            </element>
            <element name="country" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='country']" />
                    <documentation>Identifies the name of a country within a body of text.</documentation>
                </annotation>
            </element>
            <element name="alertInline">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='alertInline']" />
                    <documentation>Describes an alert that appears inline within a body of text.</documentation>
                </annotation>
                <complexType mixed="true">
                    <complexContent>
                        <extension base="int:inlineType">
                            <attribute name="class" type="int:alertTypesEnumType" default="note">
                                <annotation>
                                    <documentation>Specifies the type of an alert.</documentation>
                                </annotation>
                            </attribute>
                        </extension>
                    </complexContent>
                </complexType>
            </element>
            <element name="lineBreak">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='lineBreak']" />
                    <documentation>Identifies a line break (carriage return) within a body of text, without breaking the paragraph.</documentation>
                </annotation>
            </element>
            <element name="footnote" type="normalizedString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='footnote']" />
                    <documentation>Identifies a span of text to be associated with a footnote reference.</documentation>
                </annotation>
            </element>
            <element name="subscript" type="int:subscriptType">
                <annotation>
                    <documentation>Identifies a subscript in a mathematical expression. A subscript is a character or symbol that displays slightly below and to the side of another character.</documentation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='subscript']">
                        <doc:localizable xmlns:doc="http://schemas.microsoft.com/maml/internal">true</doc:localizable>
                    </appinfo>
                </annotation>
            </element>
            <element name="superscript" type="int:superscriptType">
                <annotation>
                    <documentation>Identifies a superscript in a mathematical expression. A superscript is a character or symbol that displays slightly above and to the side of another character.</documentation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='superscript']">
                        <doc:localizable xmlns:doc="http://schemas.microsoft.com/maml/internal">true</doc:localizable>
                    </appinfo>
                </annotation>
            </element>
            <element name="navigationLink" type="int:navigationLinkType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='navigationLink']" />
                    <appinfo source="urn:xsd:int:doc(PsHelpIntermediate):/xs:schema/xs:complexType[@name='navigationLinkType']" />
                    <documentation>Contains descriptive text for a link. The navigationLink element is the navigational link in MAML, intended to produce a jump-type link in the help pane. Glossary links are navigation links.</documentation>
                </annotation>
            </element>
            <element name="shellExecuteLink" type="int:shellExecuteLinkType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(shellExecute):/xs:schema/xs:element[@name='shellExecuteLink']#L53" />
                </annotation>
            </element>
            <element name="replaceable" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='replaceable']" />
                    <documentation>Identifies a span of text representing part of a command or function that the user replaces.</documentation>
                </annotation>
            </element>
            <element name="entityInline">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='entityInline']" />
                    <documentation>Describes an XML entity that appears inline within a body of text.</documentation>
                </annotation>
                <complexType>
                    <attribute name="type" type="normalizedString">
                        <annotation>
                            <documentation>Specifies the type of entity.</documentation>
                        </annotation>
                    </attribute>
                </complexType>
            </element>
            <element name="rangeInline" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='rangeInline']" />
                    <documentation>Describes a range of values, such as numbers or characters.</documentation>
                </annotation>
            </element>
            <element name="newTerm" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='newTerm']" />
                    <documentation>Denotes the first instance of a new term within a document. Use the newTerm element to introduce terms that the user may be unfamiliar with.</documentation>
                </annotation>
            </element>
            <element name="languageKeyword" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='languageKeyword']" />
                    <documentation>Identifies a word that has special meaning in reference documentation (e.g., in C# const is a language keyword).</documentation>
                </annotation>
            </element>
            <element name="math" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='math']" />
                    <documentation>This element identifies strings that represent a mathematical elements. The intent is to allow rendering to format a math element in a font that supports displaying the text appropriately (example would be allowing for a font to render the Pi symbol appropriately).</documentation>
                </annotation>
            </element>
        </choice>
    </group>
    <group name="userActionsGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:group[@name='userActionsGroup']" />
        </annotation>
        <choice>
            <element name="key" type="token">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='key']" />
                    <documentation>Identifies the name of a key on the computer keyboard, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="symbolicName" type="token">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='symbolicName']" />
                    <documentation>Identifies the symbolic name of a key on the computer keyboard, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="button">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='button']" />
                    <documentation>Specifies which mouse button to click, as part of a UI automation sequence.</documentation>
                </annotation>
                <complexType>
                    <simpleContent>
                        <extension base="token">
                            <attribute name="type" use="required">
                                <simpleType>
                                    <restriction base="token">
                                        <enumeration value="leftMouseButton" />
                                        <enumeration value="middleMouseButton" />
                                        <enumeration value="rightMouseButton" />
                                        <enumeration value="macMouseButton" />
                                        <enumeration value="toolbarButton" />
                                        <enumeration value="dialogButton" />
                                        <enumeration value="genericButton" />
                                    </restriction>
                                </simpleType>
                            </attribute>
                        </extension>
                    </simpleContent>
                </complexType>
            </element>
        </choice>
    </group>
    <group name="inlineBasicGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:group[@name='inlineBasicGroup']" />
        </annotation>
        <choice>
            <group ref="int:inlineCommonGroup" />
        </choice>
    </group>
    <group name="inlineUiGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:group[@name='inlineUiGroup']" />
            <documentation>This group is used for referencing all base UI elements.</documentation>
        </annotation>
        <choice>
            <element name="menuSelection">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='menuSelection']" />
                    <documentation>Identifies one or more selections from a menu.</documentation>
                </annotation>
                <complexType>
                    <sequence>
                        <element name="shortcut" minOccurs="0">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='shortcut']" />
                                <documentation>Identifies a computer keyboard key combination for an action that is also available through the menu.</documentation>
                            </annotation>
                            <complexType>
                                <choice maxOccurs="unbounded">
                                    <group ref="int:userActionsGroup" />
                                </choice>
                                <attributeGroup ref="int:userInstructionAttributeGroup" />
                            </complexType>
                        </element>
                        <choice maxOccurs="unbounded">
                            <group ref="int:userActionsGroup" />
                            <element name="icon" type="token">
                                <annotation>
                                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='icon']" />
                                    <documentation>Identifies descriptive text for an icon or graphic that appears in a user interface element, within a body of text.</documentation>
                                </annotation>
                            </element>
                            <element name="label" type="token">
                                <annotation>
                                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='label']" />
                                    <documentation>Describes the identifying text on a user interface element, within a body of text.</documentation>
                                </annotation>
                            </element>
                            <element name="menu" type="int:menuType">
                                <annotation>
                                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='menu']" />
                                    <documentation>Identifies the name of a menu, within a body of text.</documentation>
                                </annotation>
                            </element>
                        </choice>
                    </sequence>
                </complexType>
            </element>
            <element name="shortcut">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='shortcut']" />
                    <documentation>Identifies a computer keyboard key combination for an action that is also available through the menu.</documentation>
                </annotation>
                <complexType>
                    <choice maxOccurs="unbounded">
                        <group ref="int:userActionsGroup" />
                    </choice>
                    <attributeGroup ref="int:userInstructionAttributeGroup" />
                </complexType>
            </element>
            <element name="keyCombinationInline">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='keyCombinationInline']" />
                    <documentation>Describes a computer keyboard key combination for an action that is also available through a menu. When the userAction element is a child of an executionMethod element, it indicates a point in a task where the user is required to perform a specific action.</documentation>
                </annotation>
                <complexType>
                    <choice maxOccurs="unbounded">
                        <group ref="int:userActionsGroup" />
                    </choice>
                    <attributeGroup ref="int:userInstructionAttributeGroup" />
                </complexType>
            </element>
            <element name="userInput">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='userInput']" />
                    <documentation>Identifies a text string representing data that the user enters, within a body of text.</documentation>
                </annotation>
                <complexType mixed="true">
                    <sequence>
                        <element name="commandInline" minOccurs="0">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='commandInline']" />
                                <documentation>Identifies the name of an executable or other software application.</documentation>
                            </annotation>
                            <complexType mixed="true">
                                <choice minOccurs="0" maxOccurs="unbounded">
                                    <element name="replaceable" type="int:NonEmptyString" minOccurs="0">
                                        <annotation>
                                            <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='replaceable']" />
                                            <documentation>Identifies a span of text representing part of a command or function that the user replaces.</documentation>
                                        </annotation>
                                    </element>
                                </choice>
                            </complexType>
                        </element>
                        <element name="replaceable" type="int:NonEmptyString" minOccurs="0">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='replaceable']" />
                                <documentation>Identifies a span of text representing part of a command or function that the user replaces.</documentation>
                            </annotation>
                        </element>
                    </sequence>
                </complexType>
            </element>
        </choice>
    </group>
    <group name="inlineSoftwareGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:group[@name='inlineSoftwareGroup']" />
        </annotation>
        <choice>
            <element name="application" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='application']" />
                    <documentation>Identifies the name of an application, such as Microsoft Windows or Notepad, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="database" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='database']" />
                    <documentation>Identifies the name of a database within a body of text.</documentation>
                </annotation>
            </element>
            <element name="internetUri">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='internetUri']" />
                    <documentation>Identifies an Internet address, such as a Web URL or an e-mail address, within a body of text.</documentation>
                </annotation>
                <complexType mixed="true">
                    <attribute name="type">
                        <annotation>
                            <documentation>Indicates the type of URI to use.</documentation>
                        </annotation>
                        <simpleType>
                            <restriction base="token">
                                <enumeration value="email" />
                                <enumeration value="web" />
                                <enumeration value="ftp" />
                            </restriction>
                        </simpleType>
                    </attribute>
                </complexType>
            </element>
            <element name="localUri">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='localUri']" />
                    <documentation>Specifies a path to a local resource.</documentation>
                </annotation>
                <complexType mixed="true">
                    <sequence minOccurs="0">
                        <element name="replaceable" type="int:NonEmptyString">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='replaceable']" />
                                <documentation>Identifies a span of text representing part of a command or function that the user replaces.</documentation>
                            </annotation>
                        </element>
                    </sequence>
                    <attribute name="type">
                        <annotation>
                            <documentation>Indicates the type of URI to use.</documentation>
                        </annotation>
                        <simpleType>
                            <restriction base="token">
                                <enumeration value="absolutePath" />
                                <enumeration value="relativePath" />
                                <enumeration value="registryKey" />
                                <enumeration value="allUsersDocAndSettings" />
                                <enumeration value="currentUserDocAndSettings" />
                                <enumeration value="programFiles" />
                                <enumeration value="Windows" />
                                <enumeration value="mshelp" />
                            </restriction>
                        </simpleType>
                    </attribute>
                </complexType>
            </element>
            <element name="environmentVariable" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='environmentVariable']" />
                    <documentation>Identifies an operating system environment variable within a body of text.</documentation>
                </annotation>
            </element>
            <element name="errorInline" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='errorInline']" />
                    <documentation>Identifies a string of error text within a body of text.</documentation>
                </annotation>
            </element>
            <element name="hardware" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='hardware']" />
                    <documentation>Identifies the name of a computer hardware component or peripheral device, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="literal" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='literal']" />
                    <documentation>Identifies a literal value within a body of text.</documentation>
                </annotation>
            </element>
            <element name="markup" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='markup']" />
                    <documentation>Identifies a string of markup, such as XML or TeX, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="commandInline">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='commandInline']" />
                    <documentation>Identifies the name of an executable or other software application.</documentation>
                </annotation>
                <complexType mixed="true">
                    <choice minOccurs="0" maxOccurs="unbounded">
                        <element name="replaceable" type="int:NonEmptyString">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='replaceable']" />
                                <documentation>Identifies a span of text representing part of a command or function that the user replaces.</documentation>
                            </annotation>
                        </element>
                    </choice>
                </complexType>
            </element>
            <element name="token" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='token']" />
                    <documentation>Identifies a symbol within a body of text that represents a grammatical construct, or is a link to something else. Similar to the literal element.</documentation>
                </annotation>
            </element>
            <element name="codeInline" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='codeInline']" />
                    <documentation>Identifies a string of code, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="computerOutputInline" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='computerOutputInline']" />
                    <documentation>Identifies textual content associated with a user interface or console output, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="prompt" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='prompt']" />
                    <documentation>Identifies a string that represents a command prompt or user interface input field, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="ui" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='ui']" />
                    <documentation>Identifies text representing a user interface element, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="registryEntryInline">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineSoftware):/xs:schema/xs:element[@name='registryEntryInline']" />
                    <documentation>Identifies a registry entry, within a body of text.</documentation>
                </annotation>
                <complexType>
                    <sequence>
                        <element name="name" type="int:NonEmptyString">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='name']" />
                                <documentation>Specifies the name of the registry entry.</documentation>
                            </annotation>
                        </element>
                        <element name="key" type="string">
                            <annotation>
                                <documentation>Specifies the key value of the registry entry.</documentation>
                            </annotation>
                        </element>
                        <element name="value" type="string" maxOccurs="unbounded">
                            <annotation>
                                <documentation>Specifies the value of the registry entry.</documentation>
                            </annotation>
                        </element>
                    </sequence>
                    <attribute name="type" default="string">
                        <annotation>
                            <documentation>Specifies the type of registry entry.</documentation>
                        </annotation>
                        <simpleType>
                            <restriction base="string">
                                <enumeration value="string" />
                                <enumeration value="expandableString" />
                                <enumeration value="binary" />
                                <enumeration value="dWord" />
                                <enumeration value="multiString" />
                            </restriction>
                        </simpleType>
                    </attribute>
                </complexType>
            </element>
        </choice>
    </group>
    <group name="inlineGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:group[@name='inlineGroup']" />
        </annotation>
        <choice>
            <group ref="int:inlineBasicGroup" />
            <group ref="int:inlineUiGroup" />
            <group ref="int:inlineSoftwareGroup" />
            <element name="glossaryEntryLink" type="int:navigationLinkType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='glossaryEntryLink']" />
                </annotation>
            </element>
            <element name="parameterNameInline" type="string">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='parameterNameInline']" />
                </annotation>
            </element>
            <element name="parameterValueInline" type="string">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='parameterValueInline']" />
                </annotation>
            </element>
        </choice>
    </group>
    <group name="blockCommonGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:group[@name='blockCommonGroup']" />
        </annotation>
        <choice>
            <element name="para" type="int:paraType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='para']" />
                    <documentation>Describes a paragraph, the most basic documentation unit. In addition to text, it can contain child elements to indicate various inline text types, or to add functionality such as a task or a shortcut.</documentation>
                </annotation>
            </element>
            <element name="alertSet" type="int:alertSetType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='alertSet']" />
                    <documentation>Contains a collection of alert elements. An alertSet element can have one or more alert elements as children. Use the alertSet element for more than one alert item of the same type. For example, if a topic had three items for the notes section, an alertSet could be used to combine them.</documentation>
                </annotation>
            </element>
            <element name="quote" type="int:inlineType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='quote']" />
                    <documentation>Describes a quotation. The quote element can contain text and child elements, which can be used to indicate various inline text types.</documentation>
                </annotation>
            </element>
            <element name="parameterizedBlock" type="int:parameterizedContentType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='parameterizedBlock']" />
                    <documentation>Replaced at build time by the shared content to which it refers using the parameters provided by the user. The parameters can consist of text, and XML markup. In most cases the parameter values will not be localizable content.</documentation>
                </annotation>
            </element>
        </choice>
    </group>
    <group name="codeGroup">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:group[@name='codeGroup']" />
        </annotation>
        <choice>
            <element name="code" type="int:codeType">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='code']" />
                    <documentation>Describes a block of example code text.</documentation>
                </annotation>
            </element>
            <element name="codeReference" type="token">
                <annotation>
                    <documentation>Specifies a reference to a block of code.</documentation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='codeReference']">
                        <doc:localizable xmlns:doc="http://schemas.microsoft.com/maml/internal">false</doc:localizable>
                    </appinfo>
                </annotation>
            </element>
        </choice>
    </group>
    <group name="blockSoftwareGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(blockSoftware):/xs:schema/xs:group[@name='blockSoftwareGroup']" />
        </annotation>
        <choice>
            <group ref="int:codeGroup" />
            <element name="computerOutput" type="int:inlineType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockSoftware):/xs:schema/xs:element[@name='computerOutput']" />
                    <documentation>Identifies a span of text that relates to a user interface, or console output text.</documentation>
                </annotation>
            </element>
        </choice>
    </group>
    <group name="blockGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(block):/xs:schema/xs:group[@name='blockGroup']" />
        </annotation>
        <choice>
            <group ref="int:blockCommonGroup" />
            <group ref="int:blockSoftwareGroup" />
        </choice>
    </group>
    <group name="structureGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:group[@name='structureGroup']" />
        </annotation>
        <choice>
            <group ref="int:blockGroup" />
            <group ref="int:structureListGroup" />
            <element name="definitionList" type="int:definitionListType">
                <annotation>
                    <documentation>Defines a two column table with no header or footer. The first column contains the definition term, the second column contains the definition.</documentation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='definitionList']" />
                </annotation>
            </element>
            <element name="table" type="int:tableType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='table']" />
                    <documentation>Describes a table structure. The table element is the parent of all elements within a table structure. The MAML table model conforms to the Computer-Aided Acquisition and Logistic Support group (CALS) table model (a standard formatting type designed by the Department of Defense).</documentation>
                </annotation>
            </element>
            <element name="procedure">
                <annotation>
                    <documentation>Describes a list of sequenced steps required to complete a task.</documentation>
                    <appinfo source="urn:xsd:maml:doc(structureProcedure):/xs:schema/xs:element[@name='procedure']" />
                </annotation>
                <complexType>
                    <sequence>
                        <element name="title" type="int:titleType" minOccurs="0">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='title']" />
                                <documentation>Specifies the title of a document, or part of a document.</documentation>
                            </annotation>
                        </element>
                        <element name="introduction" type="int:structureType" minOccurs="0">
                            <annotation>
                                <documentation>Contains a summary, introduction, or short description of the current item. This text typically appears in a topic and may also be used as the description of the topic that appears in a jump table when the topic is being linked to.</documentation>
                                <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='introduction']" />
                            </annotation>
                        </element>
                        <element name="step" maxOccurs="unbounded" type="int:stepType">
                            <annotation>
                                <documentation>Contains a single step in a task. A step can consist of text, one or more UI actions, or a branch point.</documentation>
                                <appinfo source="urn:xsd:maml:doc(structureProcedure):/xs:schema/xs:element[@name='step']" />
                            </annotation>
                        </element>
                        <element name="alertSet" minOccurs="0" type="int:alertSetType">
                            <annotation>
                                <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='alertSet']" />
                                <documentation>Contains a collection of alert elements. An alertSet element can have one or more alert elements as children. Use the alertSet element for more than one alert item of the same type. For example, if a topic had three items for the notes section, an alertSet could be used to combine them.</documentation>
                            </annotation>
                        </element>
                    </sequence>
                    <attributeGroup ref="int:expandCollapseGroup" />
                </complexType>
            </element>
            <element name="example" type="int:structureType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='example']" />
                    <documentation>Describes an example within a topic. Examples are typically one or more lines of code.</documentation>
                </annotation>
            </element>
            <element name="sections" type="int:sectionsType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(hierarchy):/xs:schema/xs:element[@name='sections']" />
                    <documentation>Contains a collection of section elements. The sections element encloses the major body of the document.</documentation>
                </annotation>
            </element>
        </choice>
    </group>
    <group name="structureListGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:group[@name='structureListGroup']" />
            <documentation>Describes the common lists that can be used to describe list data.</documentation>
        </annotation>
        <sequence>
            <element name="list" type="int:listType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='list']" />
                    <documentation>Describes a span of content to present in a list format.</documentation>
                </annotation>
            </element>
        </sequence>
    </group>
    <group name="parameterRetvalBaseGroup">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:group[@name='parameterRetvalBaseGroup']" />
        </annotation>
        <sequence>
            <element name="type" type="int:typeType">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='type']" />
                </annotation>
            </element>
            <element name="description" type="int:textBlockType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='description']" />
                </annotation>
            </element>
            <element name="possibleValues" type="int:possibleValuesType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='possibleValues']" />
                </annotation>
            </element>
        </sequence>
    </group>

    <complexType name="tableType">
        <sequence>
            <element name="title" type="int:titleType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='title']" />
                    <documentation>Specifies the title of a document, or part of a document.</documentation>
                </annotation>
            </element>
            <element name="summary" type="int:NonEmptyString" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='summary']" />
                </annotation>
            </element>
            <element name="introduction" type="int:structureType" minOccurs="0">
                <annotation>
                    <documentation>Contains a summary, introduction, or short description of the current item. This text typically appears in a topic and may also be used as the description of the topic that appears in a jump table when the topic is being linked to.</documentation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='introduction']" />
                </annotation>
            </element>
            <element name="tableHeader" type="int:tableBodyType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='tableHeader']" />
                    <documentation>Describes a table header, typically the first row in a table.</documentation>
                </annotation>
            </element>
            <element name="row" minOccurs="1" maxOccurs="unbounded" type="int:rowType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='row']" />
                    <documentation>Describes a row within a standard table structure. Each row can contain one or more entries.</documentation>
                </annotation>
            </element>
            <element name="tableFooter" type="int:tableBodyType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='tableFooter']" />
                    <documentation>
                        <b>Describes a table footer, typically the last row in a table.</b>
                    </documentation>
                </annotation>
            </element>
            <element name="alertSet" minOccurs="0" maxOccurs="unbounded" type="int:alertSetType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='alertSet']" />
                    <documentation>Contains a collection of alert elements. An alertSet element can have one or more alert elements as children. Use the alertSet element for more than one alert item of the same type. For example, if a topic had three items for the notes section, an alertSet could be used to combine them.</documentation>
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="listType">
        <sequence>
            <element name="listItem" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='listItem']" />
                    <documentation>Describes an item within a list element. The content of the listItem element is treated as a unit.</documentation>
                </annotation>
                <complexType>
                    <complexContent>
                        <extension base="int:structureType">
                            <attribute name="selectionDefault" use="optional">
                                <annotation>
                                    <documentation>Indicates whether the list item, if selectable, is selected in a default rendering.</documentation>
                                </annotation>
                                <simpleType>
                                    <restriction base="string">
                                        <enumeration value="selected" />
                                        <enumeration value="unselected" />
                                    </restriction>
                                </simpleType>
                            </attribute>
                        </extension>
                    </complexContent>
                </complexType>
            </element>
        </sequence>
        <attribute name="class" default="unordered">
            <annotation>
                <documentation>Specifies the type of list to create.</documentation>
            </annotation>
            <simpleType>
                <restriction base="string">
                    <enumeration value="unordered" />
                    <enumeration value="ordered" />
                    <enumeration value="multiSelect" />
                    <enumeration value="singleSelect" />
                </restriction>
            </simpleType>
        </attribute>
    </complexType>
    <complexType name="sectionType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(hierarchy):/xs:schema/xs:complexType[@name='sectionType']" />
        </annotation>
        <sequence>
            <element name="title" type="int:titleType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='title']" />
                    <documentation>Specifies the title of a document, or part of a document.</documentation>
                </annotation>
            </element>
            <element name="subTitle" type="int:titleType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='subTitle']" />
                    <documentation>Specifies a secondary title for a document, or part of a document.</documentation>
                </annotation>
            </element>
            <element name="introduction" type="int:structureType" minOccurs="0">
                <annotation>
                    <documentation>Contains a summary, introduction, or short description of the current item. This text typically appears in a topic and may also be used as the description of the topic that appears in a jump table when the topic is being linked to.</documentation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='introduction']" />
                </annotation>
            </element>
            <group ref="int:structureGroup" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
    </complexType>
    <complexType name="sectionsType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(hierarchy):/xs:schema/xs:complexType[@name='sectionsType']" />
        </annotation>
        <choice minOccurs="1" maxOccurs="unbounded">
            <element name="section">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(hierarchy):/xs:schema/xs:element[@name='section']" />
                    <documentation>Describes a section within a document. The section element supports recursion (in other words, an instance of a section element can have one or more section elements as children). The section element defines the hierarchy of sections within a topic through nesting. Each section corresponds to a heading level in the final, rendered document. For example, the top section is equivalent to the first heading level and a child section of that element would be the second level.</documentation>
                </annotation>
                <complexType>
                    <complexContent>
                        <extension base="int:sectionType">
                            <sequence>
                                <element name="relatedLinks" type="int:relatedLinksType" minOccurs="0">
                                    <annotation>
                                        <documentation>Describes a collection of links, typically used for the "Related Topics" section of a document. The purpose of this element is to provide links to topics that may be of further interest to the user.</documentation>
                                    </annotation>
                                </element>
                            </sequence>
                            <attributeGroup ref="int:expandCollapseGroup" />
                        </extension>
                    </complexContent>
                </complexType>
            </element>
            <element name="sidebar" type="int:sectionType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='sidebar']" />
                    <documentation>Identifies a span of text to render as a sidebar or similar alternate presentation.</documentation>
                </annotation>
            </element>
            <element name="pullQuote" type="int:sectionType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='pullQuote']" />
                    <documentation>Identifies a span of text to render as a pull quote or similar alternate presentation.</documentation>
                </annotation>
            </element>
        </choice>
    </complexType>
    <complexType name="stepType">
        <annotation>
            <documentation>Contains a single step in a task. A step can consist of text, one or more UI actions, or a branch point.</documentation>
            <appinfo source="urn:xsd:maml:doc(structureProcedure):/xs:schema/xs:element[@name='step']" />
        </annotation>
        <choice minOccurs="0" maxOccurs="unbounded">
            <group ref="int:structureGroup" />
            <element name="step" type="int:stepType" />
        </choice>
    </complexType>
    <complexType name="entryType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:complexType[@name='entryType']" />
            <documentation>Describes an entry within a table.</documentation>
        </annotation>
        <choice minOccurs="0">
            <group ref="int:structureGroup" maxOccurs="unbounded" />
        </choice>
        <attributeGroup ref="int:tableEntryAttributeGroup" />
    </complexType>
    <complexType name="rowType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='row']" />
        </annotation>
        <choice minOccurs="1" maxOccurs="unbounded">
            <element name="headerEntry" type="int:entryType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='headerEntry']" />
                    <documentation>Describes a table entry, which is equivalent to a cell within a table row. Use the headerEntry element for text or other content related to a tableHeader.</documentation>
                </annotation>
            </element>
            <element name="entry" type="int:entryType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='entry']" />
                    <documentation>Describes a table entry, which is equivalent to a cell within a table row.</documentation>
                </annotation>
            </element>
            <element name="footerEntry" type="int:entryType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='footerEntry']" />
                    <documentation>Describes a table entry, which is equivalent to a cell within a table row. Use the footerEntry element for text or other content related to a tableFooter.</documentation>
                </annotation>
            </element>
        </choice>
    </complexType>
    <complexType name="tableBodyType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:complexType[@name='tableBodyType']" />
            <documentation>This type is intended for use as the children of table elements.</documentation>
        </annotation>
        <sequence>
            <element name="row" maxOccurs="unbounded" type="int:rowType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='row']" />
                    <documentation>Describes a row within a standard table structure. Each row can contain one or more entries.</documentation>
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="structureType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:complexType[@name='structureType']" />
            <documentation>Describes the common structure elements. It is intended for use in page types and structure elements.</documentation>
        </annotation>
        <group ref="int:structureGroup" minOccurs="0" maxOccurs="unbounded" />
    </complexType>
    <complexType name="definitionListItemType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:complexType[@name='definitionListItemType']" />
        </annotation>
        <sequence>
            <element name="term">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureGlossary):/xs:schema/xs:element[@name='term']" />
                    <documentation>Describes a word or phrase in a glossary entry.</documentation>
                </annotation>
                <complexType mixed="true">
                    <sequence minOccurs="0">
                        <element name="rubyText" type="string">
                            <annotation>
                                <documentation>Specifies equivalent text in a different encoding for sorting purposes. Use the rubyText element to sort terms presented in languages that cannot be sorted alphabetically.</documentation>
                            </annotation>
                        </element>
                    </sequence>
                    <attribute name="termClass" type="string" use="optional">
                        <annotation>
                            <documentation>Specifies an arbitrary class for the term.</documentation>
                        </annotation>
                    </attribute>
                    <attribute name="partOfSpeech" type="string" use="optional" default="noun">
                        <annotation>
                            <documentation>Specifies the part of speech used by the term.</documentation>
                        </annotation>
                    </attribute>
                    <attribute name="geographicalUsage" type="string" use="optional">
                        <annotation>
                            <documentation>Specifies a specific geographical usage for the term.</documentation>
                        </annotation>
                    </attribute>
                    <attribute name="language" type="string" use="optional">
                        <annotation>
                            <documentation>Specifies the applicable language for the term.</documentation>
                        </annotation>
                    </attribute>
                    <attribute name="address" type="string" use="optional">
                        <annotation>
                            <documentation>Describes the attached content with a unique ID/GUID/URI to reference for purposes such as sharing and hyperlinking.</documentation>
                        </annotation>
                    </attribute>
                </complexType>
            </element>
            <element name="definition" type="int:structureSimpleType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureGlossary):/xs:schema/xs:element[@name='definition']" />
                    <documentation>Explains the meaning of a term for a glossary entry.</documentation>
                </annotation>
            </element>
            <element name="uri" type="anyURI" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='uri']" />
                    <documentation>Specifies the URI for a navigation link.</documentation>
                </annotation>
            </element>
        </sequence>
    </complexType>
    <group name="structureSimpleGroup">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:group[@name='structureSimpleGroup']" />
        </annotation>
        <choice>
            <element name="para" type="int:paraType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='para']" />
                    <documentation>Describes a paragraph, the most basic documentation unit. In addition to text, it can contain child elements to indicate various inline text types, or to add functionality such as a task or a shortcut.</documentation>
                </annotation>
            </element>
            <element name="list" type="int:listType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='list']" />
                    <documentation>Describes a span of content to present in a list format.</documentation>
                </annotation>
            </element>
        </choice>
    </group>
    <complexType name="paraType" mixed="true">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='para']" />
            <documentation>Describes a paragraph, the most basic documentation unit. In addition to text, it can contain child elements to indicate various inline text types, or to add functionality such as a task or a shortcut.</documentation>
        </annotation>
        <sequence>
            <element name="leadInPhrase" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='leadInPhrase']" />
                    <documentation>Describes a span of introductory text within a para element.</documentation>
                </annotation>
                <complexType mixed="true">
                    <attribute name="class" default="summary">
                        <annotation>
                            <documentation>Specifies a class for the leadInPhrase element.</documentation>
                        </annotation>
                        <simpleType>
                            <restriction base="string">
                                <enumeration value="summary" />
                                <enumeration value="other" />
                            </restriction>
                        </simpleType>
                    </attribute>
                </complexType>
            </element>
            <group ref="int:inlineGroup" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
    </complexType>
    <complexType name="structureSimpleType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:complexType[@name='structureSimpleType']" />
            <documentation>Used for cases where both structure and block elements are needed; however, a limited set of elements is desired.</documentation>
        </annotation>
        <group ref="int:structureSimpleGroup" minOccurs="0" maxOccurs="unbounded" />
    </complexType>
    <complexType name="definitionListType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:complexType[@name='definitionListType']" />
        </annotation>
        <sequence>
            <element name="definitionListItem" type="int:definitionListItemType" maxOccurs="unbounded">
                <annotation>
                    <documentation>Describes an entry in a definitionList. Each entry consists of a term/definition pair, and an optional URI. </documentation>
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="codeType" mixed="true">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:complexType[@name='codeType']" />
        </annotation>
        <simpleContent>
            <extension base="string">
                <attribute name="language" type="int:devLanguagesType">
                    <annotation>
                        <documentation>Specifies the programming language used in a code example or some other programmatic structure.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </simpleContent>
    </complexType>
    <complexType name="contentParameterType" mixed="true">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:complexType[@name='contentParameterType']" />
        </annotation>
        <choice minOccurs="0" maxOccurs="unbounded">
            <group ref="int:inlineGroup" />
        </choice>
        <attribute name="name" type="token" />
    </complexType>
    <complexType name="parameterizedContentType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:complexType[@name='parameterizedContentType']" />
        </annotation>
        <sequence>
            <element name="contentParameter" type="int:contentParameterType" maxOccurs="unbounded">
                <annotation>
                    <documentation>Deprecated; do not use.</documentation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='contentParameter']">
                        <doc:localizable xmlns:doc="http://schemas.microsoft.com/maml/internal">true</doc:localizable>
                    </appinfo>
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="menuType">
        <choice>
            <element name="menuItem" type="token">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='menuItem']" />
                    <documentation>Identifies the name of a menu item, within a body of text.</documentation>
                </annotation>
            </element>
            <element name="menu" type="int:menuType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inlineUi):/xs:schema/xs:element[@name='menu']" />
                    <documentation>Identifies the name of a menu, within a body of text.</documentation>
                </annotation>
            </element>
        </choice>
    </complexType>
    <complexType name="shellExecuteLinkType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(shellExecute):/xs:schema/xs:complexType[@name='shellExecuteLinkType']#L45" />
        </annotation>
        <sequence>
            <element name="linkText" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='linkText']#L146" />
                    <documentation>Contains descriptive text for a link.</documentation>
                </annotation>
            </element>
            <element name="command" type="int:NonEmptyString">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(shellExecute):/xs:schema/xs:element[@name='command']#L20" />
                    <documentation>Contains a string with the command to execute. This typically consists of the name of a program or other executable, followed by and commands or parameters. For example: "notepad myFile.txt".</documentation>
                </annotation>
            </element>
            <element name="summary" type="int:NonEmptyString" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='summary']" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="navigationLinkType" mixed="true">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:complexType[@name='navigationLinkType']" />
            <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='linkText']" />
            <documentation>Contains descriptive text for a link. The navigationLink element is the navigational link in MAML, intended to produce a jump-type link in the help pane. Glossary links are navigation links.</documentation>
        </annotation>
        <simpleContent>
            <extension base="int:NonEmptyString">
                <attribute name="uri" type="anyURI">
                    <annotation>
                        <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='uri']" />
                        <documentation>Specifies the URI for a navigation link.</documentation>
                    </annotation>
                </attribute>
                <attribute name="targetVerification" type="boolean" default="false" />
            </extension>
        </simpleContent>
    </complexType>
    <complexType name="superscriptType" mixed="false">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:complexType[@name='superscriptType']" />
        </annotation>
        <simpleContent>
            <extension base="token" />
        </simpleContent>
    </complexType>
    <complexType name="subscriptType" mixed="false">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:complexType[@name='subscriptType']" />
        </annotation>
        <simpleContent>
            <extension base="token" />
        </simpleContent>
    </complexType>
    <complexType name="inlineType" mixed="true">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:complexType[@name='inlineType']" />
            <documentation>Describes a simple inline-only content model. It provides both text and elements with similarly simple content models.</documentation>
        </annotation>
        <choice minOccurs="0" maxOccurs="unbounded">
            <group ref="int:inlineGroup" />
        </choice>
    </complexType>
    <complexType name="textBlockType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:complexType[@name='textBlockType']" />
            <documentation>Describes the schema for any block of text that can occur in an ACW panel.</documentation>
        </annotation>
        <choice maxOccurs="unbounded">
            <element name="para" minOccurs="0" maxOccurs="unbounded" type="int:paraType" />
            <element name="list" type="int:listType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='list']" />
                    <documentation>Describes a span of content to present in a list format.</documentation>
                </annotation>
            </element>
            <element name="table" type="int:tableType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='table']" />
                    <documentation>Describes a table structure. The table element is the parent of all elements within a table structure. The MAML table model conforms to the Computer-Aided Acquisition and Logistic Support group (CALS) table model (a standard formatting type designed by the Department of Defense).</documentation>
                </annotation>
            </element>
            <element name="example" type="int:structureType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='example']" />
                    <documentation>Describes an example within a topic. Examples are typically one or more lines of code.</documentation>
                </annotation>
            </element>
            <element name="alertSet" minOccurs="0" maxOccurs="unbounded" type="int:alertSetType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='alertSet']" />
                    <documentation>Contains a collection of alert elements. An alertSet element can have one or more alert elements as children. Use the alertSet element for more than one alert item of the same type. For example, if a topic had three items for the notes section, an alertSet could be used to combine them.</documentation>
                </annotation>
            </element>
            <element name="quote" type="int:inlineType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='quote']" />
                    <documentation>Describes a quotation. The quote element can contain text and child elements, which can be used to indicate various inline text types.</documentation>
                </annotation>
            </element>
            <element name="definitionList" type="int:definitionListType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <documentation>Defines a two column table with no header or footer. The first column contains the definition term, the second column contains the definition.</documentation>
                    <appinfo source="urn:xsd:maml:doc(structureTable):/xs:schema/xs:element[@name='definitionList']" />
                </annotation>
            </element>
        </choice>
    </complexType>
    <complexType name="aliasesType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='synonymsType']" />
        </annotation>
        <sequence>
            <element name="alias" type="int:UcFirstIdentifier" minOccurs="1" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='synonym']" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="typeType">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:complexType[@name='typeType']" />
        </annotation>
        <complexContent>
            <extension base="int:textBlockType">
                <attribute name="name" type="int:NonEmptyNormalizedString" use="required">
                    <annotation>
                        <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='name']" />
                        <documentation>Specifies the name of the type.</documentation>
                    </annotation>
                </attribute>
                <attribute name="uri" type="anyURI">
                    <annotation>
                        <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='uri']" />
                        <documentation>Specifies the URI for a navigation link.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="possibleValueType">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:complexType[@name='possibleValueType']" />
        </annotation>
        <complexContent>
            <extension base="int:textBlockType">
                <attribute name="value" type="int:NonEmptyString" use="required" />
                <attribute name="default" type="boolean" use="optional" />
            </extension>
        </complexContent>
    </complexType>
    <complexType name="possibleValuesType">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:complexType[@name='possibleValuesType']" />
        </annotation>
        <sequence>
            <element name="possibleValue" type="int:possibleValueType" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='possibleValue']" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="validationType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='validationType']" />
        </annotation>
        <attribute name="minCount" type="integer" />
        <attribute name="maxCount" type="integer" />
        <attribute name="minLength" type="integer" />
        <attribute name="maxLength" type="integer" />
        <attribute name="minRange" type="int:NonEmptyNormalizedString" />
        <attribute name="maxRange" type="int:NonEmptyNormalizedString" />
        <attribute name="pattern" type="int:NonEmptyString" />
    </complexType>
    <complexType name="inputTypeType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='inputTypeType']" />
        </annotation>
        <sequence>
            <element name="type" type="int:typeType">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='type']" />
                </annotation>
            </element>
            <element name="description" type="int:textBlockType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='description']" />
                </annotation>
            </element>
        </sequence>
        <attribute name="requiresTrustedData" type="int:trustedDataType" use="optional">
            <annotation>
                <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:attribute[@name='requiresTrustedData']" />
            </annotation>
        </attribute>
    </complexType>
    <element name="inputType" type="int:inputTypeType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='inputType']" />
        </annotation>
    </element>
    <complexType name="inputTypesType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='inputTypesType']" />
        </annotation>
        <sequence>
            <element ref="int:inputType" maxOccurs="unbounded" />
        </sequence>
    </complexType>
    <complexType name="devReturnValueType">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:complexType[@name='returnValueType']" />
        </annotation>
        <sequence minOccurs="0">
            <group ref="int:parameterRetvalBaseGroup" />
        </sequence>
    </complexType>
    <complexType name="returnValueType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='returnValueType']" />
        </annotation>
        <complexContent>
            <extension base="int:devReturnValueType">
                <attribute name="isTrustedData" type="int:trustedDataType" use="optional">
                    <annotation>
                        <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:attribute[@name='isTrustedData']" />
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="returnValuesType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='returnValuesType']" />
        </annotation>
        <sequence>
            <element name="returnValue" type="int:returnValueType" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='returnValue']" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="errorType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='errorType']" />
        </annotation>
        <sequence>
            <element name="type" type="int:typeType">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='type']" />
                </annotation>
            </element>
            <element name="description" type="int:textBlockType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='description']" />
                </annotation>
            </element>
            <element name="recommendedAction" type="int:textBlockType" minOccurs="0" />
            <element name="targetObjectType" type="int:typeType" />
        </sequence>
        <attribute name="category" type="int:PsErrorCategory" default="NotSpecified" />
        <attribute name="nonTerminating" type="boolean" default="false" />
        <attribute name="errorID" type="int:DottedNameIdentifier" />
    </complexType>
    <complexType name="errorsType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='errorsType']" />
        </annotation>
        <sequence>
            <element name="error" type="int:errorType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='error']" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="titleType" mixed="true">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:complexType[@name='titleType']" />
        </annotation>
        <sequence minOccurs="0" maxOccurs="unbounded">
            <choice>
                <element name="conditionalInline" type="int:inlineType">
                    <annotation>
                        <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='conditionalInline']" />
                        <documentation>Specifies a span of conditional text, within a body of text.</documentation>
                    </annotation>
                </element>
                <element name="acronym" type="int:NonEmptyString">
                    <annotation>
                        <appinfo source="urn:xsd:maml:doc(inlineCommon):/xs:schema/xs:element[@name='acronym']" />
                        <documentation>Identifies an acronym within a body of text.</documentation>
                    </annotation>
                </element>
            </choice>
        </sequence>
    </complexType>
    <complexType name="devExampleType">
        <annotation>
            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:complexType[@name='exampleType']" />
        </annotation>
        <sequence>
            <element name="title" type="int:titleType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='title']" />
                    <documentation>Specifies the title of a document, or part of a document.</documentation>
                </annotation>
            </element>
            <element name="introduction" type="int:structureType" minOccurs="0">
                <annotation>
                    <documentation>Contains a summary, introduction, or short description of the current item. This text typically appears in a topic and may also be used as the description of the topic that appears in a jump table when the topic is being linked to.</documentation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='introduction']" />
                </annotation>
            </element>
            <group ref="int:codeGroup" />
            <element name="buildInstructions" type="int:structureType" minOccurs="0">
                <annotation>
                    <documentation>Contains instructions for building a code example.</documentation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='buildInstructions']" />
                </annotation>
            </element>
            <element name="robustProgramming" type="int:structureType" minOccurs="0">
                <annotation>
                    <documentation>Contains a discussion of error handling and other related issues.</documentation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='robustProgramming']" />
                </annotation>
            </element>
            <element name="security" type="int:structureType" minOccurs="0">
                <annotation>
                    <documentation>Contains a discussion of security issues.</documentation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='security']" />
                </annotation>
            </element>
            <element name="results" type="int:NonEmptyString" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='results']" />
                </annotation>
            </element>
            <element name="remarks" type="int:structureType" minOccurs="0">
                <annotation>
                    <documentation>Contains a detailed discussion of the current item.</documentation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='remarks']" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="exampleTypeRestricted">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='exampleTypeRestricted']" />
        </annotation>
        <complexContent>
            <restriction base="int:devExampleType">
                <sequence>
                    <element name="title" type="int:titleType" minOccurs="0">
                        <annotation>
                            <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='title']" />
                            <documentation>Specifies the title of a document, or part of a document.</documentation>
                        </annotation>
                    </element>
                    <element name="introduction" type="int:structureType" minOccurs="0">
                        <annotation>
                            <documentation>Contains a summary, introduction, or short description of the current item. This text typically appears in a topic and may also be used as the description of the topic that appears in a jump table when the topic is being linked to.</documentation>
                            <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='introduction']" />
                        </annotation>
                    </element>
                    <group ref="int:codeGroup" />
                    <element name="buildInstructions" type="int:structureType" minOccurs="0" maxOccurs="0">
                        <annotation>
                            <documentation>Contains instructions for building a code example.</documentation>
                            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='buildInstructions']" />
                        </annotation>
                    </element>
                    <element name="robustProgramming" type="int:structureType" minOccurs="0" maxOccurs="0">
                        <annotation>
                            <documentation>Contains a discussion of error handling and other related issues.</documentation>
                            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='robustProgramming']" />
                        </annotation>
                    </element>
                    <element name="security" type="int:structureType" minOccurs="0">
                        <annotation>
                            <documentation>Contains a discussion of security issues.</documentation>
                            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='security']" />
                        </annotation>
                    </element>
                    <element name="results" type="int:NonEmptyString" minOccurs="0" maxOccurs="0">
                        <annotation>
                            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='results']" />
                        </annotation>
                    </element>
                    <element name="remarks" type="int:structureType" minOccurs="0">
                        <annotation>
                            <documentation>Contains a detailed discussion of the current item.</documentation>
                            <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='remarks']" />
                        </annotation>
                    </element>
                </sequence>
            </restriction>
        </complexContent>
    </complexType>
    <complexType name="commandTextType" mixed="true">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='commandTextType']#L283" />
        </annotation>
        <attribute name="input" type="boolean" use="optional" />
    </complexType>
    <complexType name="commandLineType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='commandLineType']#L275" />
        </annotation>
        <sequence>
            <element name="commandText" type="int:commandTextType" minOccurs="1" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='commandText']#L282" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="commandLinesType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='commandLinesType']#L267" />
        </annotation>
        <sequence>
            <element name="commandLine" type="int:commandLineType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='commandLine']#L274" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <complexType name="exampleType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='exampleTypeRestricted']#L248" />
        </annotation>
        <complexContent>
            <extension base="int:exampleTypeRestricted">
                <sequence>
                    <element name="commandLines" type="int:commandLinesType" minOccurs="0">
                        <annotation>
                            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='commandLines']" />
                        </annotation>
                    </element>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="examplesType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='examplesType']#L230" />
        </annotation>
        <sequence>
            <element name="example" type="int:exampleType" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='example']#L238" />
                </annotation>
            </element>
        </sequence>
    </complexType>
    <simpleType name="relatedLinksTypeType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(hierarchy):/xs:schema/xs:simpleType[@name='relatedLinksTypeType']#L165" />
        </annotation>
        <restriction base="token">
            <enumeration value="seeAlso" />
            <enumeration value="relatedFiles" />
            <enumeration value="samples" />
            <enumeration value="other" />
        </restriction>
    </simpleType>
    <complexType name="relatedLinksType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(hierarchy):/xs:schema/xs:complexType[@name='relatedLinksType']" />
        </annotation>
        <sequence>
            <element name="title" type="int:titleType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='title']" />
                    <documentation>Specifies the title of a document, or part of a document.</documentation>
                </annotation>
            </element>
            <element name="navigationLink" type="int:navigationLinkType" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(inline):/xs:schema/xs:element[@name='navigationLink']" />
                </annotation>
            </element>
        </sequence>
        <attribute name="type" use="optional" default="seeAlso" type="int:relatedLinksTypeType" />
    </complexType>
    <complexType name="alertSetType">
        <annotation>
            <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='alertSet']" />
            <documentation>Contains a collection of alert elements. An alertSet element can have one or more alert elements as children. Use the alertSet element for more than one alert item of the same type. For example, if a topic had three items for the notes section, an alertSet could be used to combine them.</documentation>
        </annotation>
        <sequence>
            <element name="title" type="int:titleType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(blockCommon):/xs:schema/xs:element[@name='title']" />
                    <documentation>Specifies the title of a document, or part of a document.</documentation>
                </annotation>
            </element>
            <element name="alert" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='alert']" />
                    <documentation>Specifies content of elevated importance or otherwise that needs to be called out. The alert element is a single-level alert structure.</documentation>
                </annotation>
                <complexType>
                    <group ref="int:structureGroup" maxOccurs="unbounded" />
                </complexType>
            </element>
        </sequence>
        <attribute name="class" type="int:alertTypesEnumType" default="note">
            <annotation>
                <documentation>Specifies the type of alert.</documentation>
            </annotation>
        </attribute>
        <attributeGroup ref="int:expandCollapseGroup" />
    </complexType>
    <complexType name="syntaxItemType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='syntaxItemType']" />
        </annotation>
        <attribute name="parameterSetName" type="int:DottedNameIdentifier" use="optional" default="_ALLPARAMETERSETS">
            <annotation>
                <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='name']" />
            </annotation>
        </attribute>
        <attribute name="required" type="boolean" use="required" />
        <attribute name="globbing" type="boolean" use="required" />
        <attribute name="pipelineInput" use="required">
            <simpleType>
                <restriction base="int:NonEmptyNormalizedString">
                    <enumeration value="False" />
                    <enumeration value="True (ByValue)" />
                    <enumeration value="True (ByPropertyName)" />
                    <enumeration value="True (ByValue, ByPropertyName)" />
                </restriction>
            </simpleType>
        </attribute>
        <attribute name="position" type="string" use="required" />
    </complexType>
    <complexType name="parameterType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='parameterType']" />
        </annotation>
        <sequence>
            <element name="description" type="int:textBlockType">
                <annotation>
                    <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='description']" />
                </annotation>
            </element>
            <element name="parameterValue" type="int:NonEmptyString" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='parameterValue']" />
                </annotation>
            </element>
            <element name="type" type="int:typeType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='type']" />
                </annotation>
            </element>
            <element name="defaultValue" type="int:NonEmptyString" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='defaultValue']" />
                </annotation>
            </element>
            <element name="possibleValues" type="int:possibleValuesType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:dev:doc(developer):/xs:schema/xs:element[@name='possibleValues']" />
                </annotation>
            </element>
            <element name="validation" type="int:validationType" minOccurs="0">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='validation']" />
                </annotation>
            </element>
            <element name="syntaxItem" type="int:syntaxItemType" minOccurs="1" maxOccurs="unbounded" />
        </sequence>
        <attribute name="name" type="int:UcFirstIdentifier">
            <annotation>
                <appinfo source="urn:xsd:maml:doc(structure):/xs:schema/xs:element[@name='name']" />
                <documentation>Specifies the name of the parameter.</documentation>
            </annotation>
        </attribute>
        <attribute name="variableLength" type="boolean" use="required">
            <annotation>
                <documentation>Set to true if an array or collection.</documentation>
            </annotation>
        </attribute>
        <attribute name="requiresTrustedData" type="int:trustedDataType" use="optional">
            <annotation>
                <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:attribute[@name='requiresTrustedData']" />
            </annotation>
        </attribute>
    </complexType>
    <complexType name="parametersType">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='parametersType']" />
        </annotation>
        <sequence>
            <element name="parameter" type="int:parameterType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='parameter']" />
                </annotation>
                <unique name="ParameterSets">
                  <selector xpath="int:syntaxItem" />
                  <field xpath="@parameterSetName" />
                </unique>
            </element>
        </sequence>
    </complexType>
    <element name="command">
        <annotation>
            <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:complexType[@name='commandType']" />
            <documentation>
            The command element describes the content model for the command help content type.
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="synopsis" type="int:NonEmptyString" minOccurs="1" maxOccurs="1" />
                <element name="details" type="int:textBlockType" minOccurs="1" maxOccurs="1" />
                <element name="aliases" type="int:aliasesType" minOccurs="0">
                    <annotation>
                        <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='parameters']" />
                    </annotation>
                </element>
                <element name="parameters" type="int:parametersType" minOccurs="0">
                    <annotation>
                        <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='parameters']" />
                    </annotation>
                </element>
                <element name="inputTypes" type="int:inputTypesType" minOccurs="0">
                    <annotation>
                        <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='inputTypes']" />
                    </annotation>
                </element>
                <element name="returnValues" type="int:returnValuesType">
                    <annotation>
                        <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='returnValues']" />
                    </annotation>
                </element>
                <element name="errors" type="int:errorsType" minOccurs="0">
                    <annotation>
                        <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='errors']" />
                    </annotation>
                </element>
                <element name="alertSet" minOccurs="0" maxOccurs="unbounded" type="int:alertSetType">
                    <annotation>
                        <appinfo source="urn:xsd:maml:doc(structureList):/xs:schema/xs:element[@name='alertSet']" />
                        <documentation>Contains a collection of alert elements. An alertSet element can have one or more alert elements as children. Use the alertSet element for more than one alert item of the same type. For example, if a topic had three items for the notes section, an alertSet could be used to combine them.</documentation>
                    </annotation>
                </element>
                <element name="examples" type="int:examplesType" minOccurs="0">
                    <annotation>
                        <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='examples']" />
                    </annotation>
                </element>
                <element name="relatedLinks" type="int:relatedLinksType" minOccurs="0" maxOccurs="unbounded">
                    <annotation>
                        <documentation>Describes a collection of links, typically used for the "Related Topics" section of a document. The purpose of this element is to provide links to topics that may be of further interest to the user.</documentation>
                    </annotation>
                </element>
            </sequence>
            <attribute name="verb" type="int:AllVerbNames" use="required">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='verb']" />
                </annotation>
            </attribute>
            <attribute name="noun" type="int:UcFirstIdentifier" use="required">
                <annotation>
                    <appinfo source="urn:xsd:command:doc(developerCommand):/xs:schema/xs:element[@name='noun']" />
                </annotation>
            </attribute>
            <attribute name="contentType" type="token" />
        </complexType>
    </element>
</schema>
